@model MusicTracker.ViewModels.GigFormViewModel
@{
	ViewBag.Title = Model.Heading;
}

<h2>@Model.Heading</h2>
@using (Html.BeginForm(Model.Action, "Gig"))
{
	<p class="alert alert-info">All fields are <strong>required</strong>.</p>
	@Html.AntiForgeryToken()
	@Html.HiddenFor(m=> m.Id)
	<div class="form-group">
		@Html.LabelFor(m => m.Place)
		@Html.TextBoxFor(m => m.Place, new { @class = "form-control", autofocus="autofocus" })
		@Html.ValidationMessageFor((m => m.Place))
	</div>
	<div class="form-group">
		@Html.LabelFor(m => m.Date)
		@Html.TextBoxFor(m => m.Date, new { @class = "form-control", type = "text" , placeholder = "e.g. 31 Jan 2022" })
		@Html.ValidationMessageFor((m => m.Date))
	</div>
	<div class="form-group">
		@Html.LabelFor(m => m.Time)
		@Html.TextBoxFor(m => m.Time, new { @class = "form-control", type = "time", placeholder = "e.g. 10:10" })
		@Html.ValidationMessageFor((m => m.Time))
	</div>
	<div class="form-group">
		@Html.LabelFor(m => m.Genre)
		@Html.DropDownListFor(m => m.Genre, new SelectList(Model.Genres, "Id", "Name"), "", new { @class = "form-control" })
		@Html.ValidationMessageFor((m => m.Genre))
	</div>
	<button type="submit" class="btn btn-primary">Save</button>
}
@section scripts
{
	@* Client side validation (only standard) *@
	@Scripts.Render("~/bundles/jqueryval")
}


